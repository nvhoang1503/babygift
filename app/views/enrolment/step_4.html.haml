.page_content_space
  = render 'steps_nav'
  = simple_form_for(:order, :url => "#", :html => {:class => "enroll-form", :id => 'plan-addresses'}) do |f|
    .tittle_content= I18n.t('content.page.enroll_1.title')

    - message = ''
    #shipping-address.pull-left
      .title_fields Shipping Address
      .form-inputs.clear
        = f.fields_for :shipping_address do |shipping_f|
          .info
            = shipping_f.label :first_name, "First Name <span style='color:red;'>*</span>".html_safe
            / - message = first_error_message_for(shipping_f.object, :first_name)
            - css = message ? "error" : nil
            = shipping_f.input_field :first_name, :autofocus => true, :required => true, :class => css, :title => message
          .info
            = shipping_f.label :last_name, "Last Name <span style='color:red;'>*</span>".html_safe
            / - message = first_error_message_for(shipping_f.object, :last_name)
            - css = message ? "error" : nil
            = shipping_f.input_field :last_name, :required => true, :class => css, :title => message
          .info
            = shipping_f.label :street_address, "Street Address <span style='color:red;'>*</span>".html_safe
            / - message = first_error_message_for(shipping_f.object, :street_address)
            - css = message ? "error" : nil
            = shipping_f.input_field :street_address, :required => true, :class => css, :title => message
          .info
            = label_tag :optional_address, ""
            = shipping_f.input_field :optional_address
          .info
            = shipping_f.label :city, "City <span style='color:red;'>*</span>".html_safe
            / - message = first_error_message_for(shipping_f.object, :city)
            - css = message ? "error" : nil
            = shipping_f.input_field :city, :required => true, :class => css, :title => message
          .info
            = shipping_f.label :state, "State <span style='color:red;'>*</span>".html_safe
            / - message = first_error_message_for(shipping_f.object, :state)
            - css = message ? "error" : nil
            = shipping_f.select :state, country_options_for_select('MS'), {:required => true,  :prompt => 'Select One'}, {:class => "state #{css}", :title => message}
          .info
            = shipping_f.label :zip, "Postal/Zip Code <span style='color:red;'>*</span>".html_safe
            / - message = first_error_message_for(shipping_f.object, :zip)
            - css = message ? "error" : nil
            = shipping_f.input_field :zip, :required => true, :class => "zip_input #{css}", :title => message
          .info
            = shipping_f.label :phone, "Phone <span style='color:red;'>*</span>".html_safe
            / - message = first_error_message_for(shipping_f.object, :zip)
            - css = message ? "error" : nil
            = shipping_f.input_field :zip, :required => true, :class => "zip_input #{css}", :title => message
          .info
            / = hidden_field_tag 'billing[ship_to_billing]', 0
            %input{ :type => 'checkbox', :name => 'order[ship_to_billing]', :value => '1', :id => 'billing_ship_to_billing', :class => 'left', :checked =>  'checked' }
            = label_tag :billing_ship_to_billing, 'Ship Items to the Above Billing Address', :style => 'line-height:15px; width:auto;', :class => 'left'

    #billing-address.pull-right
      .title_fields Billing Address
      .line-separator.left
      = f.fields_for :billing_address do |billing_f|
        .form-inputs.left
          .info
            = billing_f.label :first_name, "First Name <span style='color:red;'>*</span>".html_safe
            / / - message = first_error_message_for(billing_f.object, :first_name)
            - css = message ? "error" : nil
            = billing_f.input_field :first_name, :autofocus => true, :required => true, :class => css, :title => message
          .info
            = billing_f.label :last_name, "Last Name <span style='color:red;'>*</span>".html_safe
            / - message = first_error_message_for(billing_f.object, :last_name)
            - css = message ? "error" : nil
            = billing_f.input_field :last_name, :required => true, :class => css, :title => message
          .info
            = billing_f.label :street_address, "Street Address <span style='color:red;'>*</span>".html_safe
            / - message = first_error_message_for(billing_f.object, :street_address)
            - css = message ? "error" : nil
            = billing_f.input_field :street_address, :required => true, :class => css, :title => message
          .info
            = label_tag :optional_address, ""
            = billing_f.input_field :optional_address
          .info
            = billing_f.label :city, "City <span style='color:red;'>*</span>".html_safe
            / - message = first_error_message_for(billing_f.object, :city)
            - css = message ? "error" : nil
            = billing_f.input_field :city, :required => true, :class => css, :title => message
          .info
            = billing_f.label :state, "State <span style='color:red;'>*</span>".html_safe
            / - message = first_error_message_for(billing_f.object, :state)
            - css = message ? "error" : nil
            = billing_f.select :state, country_options_for_select('MS'), {:class => "state #{css}", :title => message}
          .info
            = billing_f.label :zip, "Postal/Zip Code <span style='color:red;'>*</span>".html_safe
            / - message = first_error_message_for(billing_f.object, :zip)
            - css = message ? "error" : nil
            = billing_f.input_field :zip, :required => true, :class => "zip_input #{css}", :title => message
          .info
            = billing_f.label :phone, "Phone <span style='color:red;'>*</span>".html_safe
            / - message = first_error_message_for(billing_f.object, :zip)
            - css = message ? "error" : nil
            = billing_f.input_field :zip, :required => true, :class => "zip_input #{css}", :title => message
    .clearfix
    .form-action.pull-left
      = f.submit I18n.t('content.page.enroll_4.submit'), :id => 'btn-submit', :class => 'mybtn next btn-pink uppercase'

= content_for :js do
  - javascript_include_tag 'libs/jquery.inputHintOverlay.js', 'enrolment.js'
